# -*- coding: utf-8 -*-
"""Spam Mail Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bxIcGCko54_jLDgHZxNxsQwDe06-Jpu7
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score

# load dataset to pandas dataframe
raw_mail_data = pd.read_csv('spam.csv')
mail_data = raw_mail_data.where((pd.notnull(raw_mail_data)),'')

mail_data.shape

mail_data.loc[mail_data['Category']== 'spam','Category',] = 0
mail_data.loc[mail_data['Category']== 'ham','Category',] = 1

X = mail_data['Message']
Y = mail_data['Category']
print(X)
print('...')
print(Y)

"""Train Test Split"""

#split the data into training and testing data
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size = 0.8, test_size = 0.2, random_state = 3)

#transform text data into feature vector for input into SVM model
feature_extraction = TfidfVectorizer(min_df=1, stop_words = 'english', lowercase='true')
X_train_features = feature_extraction.fit_transform(X_train)
X_test_features = feature_extraction.transform(X_test)

#convert Y_train and Y_test values as integers
Y_train = Y_train.astype('int')
Y_test = Y_test.astype('int')

"""Training SVM"""

model = LinearSVC()
model.fit(X_train_features, Y_train)

#prediction
prediction_on_training_data = model.predict(X_train_features)
accuracy_on_training_data = accuracy_score(Y_train, prediction_on_training_data)

print('Accuracy on training data:', accuracy_on_training_data)

#prediction on test data
prediction_on_test_data = model.predict(X_test_features)
accuracy_on_test_data = accuracy_score(Y_test, prediction_on_test_data)

print('Accuracy on test data : ', accuracy_on_test_data)